services:
  database:
    image: alpine:latest
    container_name: questionnaire_sqlite_db
    volumes:
      - ./sqlite_data:/data
    restart: unless-stopped
  
  traefik:
    image: traefik:2.8
    container_name: traefik
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './traefik/traefik.yml:/traefik.yml:ro' 
      - './acme.json:/acme.json'
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=80'
      - 'traefik.docker.network=proxy'
      - 'traefik.http.routers.traefik.rule=Host(`trainings.admin.asuta.or.tz`)'
      - 'traefik.http.routers.traefik.service=api@internal'

  questionnaire:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: questionnaire
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      - database
    networks:
      - proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=proxy'
      - 'traefik.port=80'
      - 'traefik.http.routers.questionnaire.tls=true'
      - 'traefik.http.routers.questionnaire.rule=Host(`trainings.admin.asuta.or.tz `)'
      - 'traefik.http.routers.questionnaire.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.questionnaire.service=questionnaire'
      - 'traefik.http.services.questionnaire.loadbalancer.server.port=8000'

volumes:
  sqlite_data:
  
networks:
  proxy:
    external: true  # Use existing network instead of creating a new one
